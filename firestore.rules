rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /payments/{payment} {
      allow read: if
      	request.auth.uid == resource.data.buyer ||
      	request.auth.uid == resource.data.seller;
    }
    match /users/{user} {
    	allow read: if request.auth.uid != null;
      allow create, update: if request.auth.uid == user;
    }
    match /users/{user}/bankAccounts/{bankAccounts} {
      allow read, write: if request.auth.uid == user;
    }
    match /events/{event} {
    	allow read: if request.auth.uid == resource.data.createdUser;
    	allow update: if request.auth.uid == resource.data.createdUser;
    	allow create: if request.auth.uid != null;
    }
    match /events/{event}/categories/{category} {
    	allow read: if true
      allow create: if request.auth.uid == 
        get(/databases/$(database)/documents/events/$(event)).data.createdUser
    	allow update: if request.auth.uid == resource.data.createdUser;
    }
    match /sessions/{session} {
    	// クライアントサイドからの読み取り不可
    	allow read, write: if false
    }
    match /messages/{message} {
    	allow create: if request.auth.uid != null;
      allow update: if resource.data.sendUser == request.auth.uid;
      allow read: if resource.data != null || request.auth.uid in resource.data.relatedUsers;
      // allow read: if resource.data != null;
      allow delete: if false
    }
    match /refunds/{refund} {
    	allow create: if request.auth.uid != null;
      allow read: if request.auth.uid == resource.data.buyer ||
      								request.auth.uid == resource.data.seller;
      allow update, delete: if false
    }
  }
}